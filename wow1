hhhhhhhhhhhhhlink goo.gl/f3XdEh


Potencjometr i dioda led
Podłączamy pod Arduino potencjometr, za pomocą którego będziemy regulować częstotliwość migania diody.












int diodaPin = 13;  // zmienna dioda pin
int potPin = 0; 	// przypisujemy do zmiennej numer wejścia analogowego
int potencjometr;            // zmienna w której będziemy zapisywać "wartość" potencjometru
int przerwa;        // zmienna w której będziemy zapisywać szybkość migania
 
void setup() {
  pinMode(diodaPin, OUTPUT);
}
 
void loop() {
  potencjometr = analogRead(potPin); 	// odczytujemy A0 i zapisujemy w zmiennej potencjometr
 
  /*
  Wykorzystana niżej funkcja map() służy do przeliczenia jednego zakresu liczb
  na inny. W naszym wypadku przeliczy liczby z zakresu od 0 do 1023 (wartość
  odczytana z A0), na liczby z zakresu od 50 do 3000 (odstęp między zapalaniem
  i gaszeniem diody). Przeliczony zakres liczb zostanie zapisany w zmiennej przerwa.
  */
 
  przerwa = map(pot, 0, 1023, 50, 3000);
 
  digitalWrite(diodaPin, HIGH);
  delay(przerwa);           	// przerwa zależna od położenia potencjometru
  digitalWrite(diodaPin, LOW);
  delay(przerwa);           	// przerwa zależna od położenia potencjometru
}

























STEROWANIE SERWO

Masa (czarny, ciemnobrązowy)
Zasilanie (czerwony)
Sygnał sterujący (żółty/pomarańczowy)



#include "Servo.h" //Biblioteka służąca do obsługi serwomechanizmu

Servo myservo;  // Utworzenie obiektu myservo
int pos = 0; //Początkowa pozycja serwa
 
void setup() { 
 myservo.attach(9);  //Przyłaczenie serwomechanizmu do pinu 9 w Arduino
} 
 
void loop() { 
 for(pos = 0; pos <= 180; pos += 1) //Zmiana pozycji (dodawanie) do 180 stopni
  {                                  
   myservo.write(pos); //ustawienie zadanej pozycji             
   delay(15); //Czas na zmiane pozycji                 
  } 

//Analogiczne odejmowanie pozycji po osiągnięciu maksumum
  for(pos = 180; pos>=0; pos-=1)    
  {                                
   myservo.write(pos);               
   delay(15);                       
  } 
}




#include <Servo.h>

Servo myservo;  // create servo object to control a servo

int potpin = 0;  // analog pin used to connect the potentiometer
int val;    // variable to read the value from the analog pin

void setup() {
  myservo.attach(9);  // attaches the servo on pin 9 to the servo object
}

void loop() {
  val = analogRead(potpin);            // reads the value of the potentiometer (value between 0 and 1023)
  val = map(val, 0, 1023, 0, 180);     // scale it to use it with the servo (value between 0 and 180)
  myservo.write(val);                  // sets the servo position according to the scaled value
  delay(15);                           // waits for the servo to get there
}
